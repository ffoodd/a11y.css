@charset 'UTF-8';

/*doc
---
title: "[tabindex] > 0"
name: tab-order
category: Errors
---

##Description
The `[tabindex]` attribute should never be greater than 0.

##Reference
* <https://github.com/Heydon/REVENGE.CSS/blob/master/revenge.css#L337>

##Selector
```css_example
[tabindex]:not([tabindex="0"]):not([tabindex="-1"])
```

##Test
```html_example
<button tabindex="1" type="button">Positive tabindex is bad</button>
```
*/
[tabindex]:not([tabindex="0"]):not([tabindex="-1"]) {
  @include error('tab-order');

  @include void-tags {
    @include error('tab-order', $self-closing: true);
  }
}



/*doc
---
title: "No [href]"
name: no-href
category: Errors
---

##Description
The `[href]` attribute, if present, should not be empty. A link *to* something, right?
However a link may be an anchor, using `[name]` or `[id]`.


##References
* <https://github.com/Heydon/REVENGE.CSS/blob/master/revenge.css#L161>
* <https://github.com/Heydon/REVENGE.CSS/blob/master/revenge.css#L165>
* <https://github.com/yahoo/debugCSS/blob/master/debugCSS.css#L386>

##Selector
```css_example
a[name=""][id=""][href=""],
a:not([name])[id=""][href=""],
a[name=""]:not([id])[href=""],
a:not([name])[id=""]:not([href]),
a[name=""]:not([id]):not([href]),
a:not([name]):not([id])[href=""],
a:not([name]):not([id]):not([href])
```

##Test
```html_example
<a>Who am I? Where do I link?</a>
```
*/
a[name=""][id=""][href=""],
a:not([name])[id=""][href=""],
a[name=""]:not([id])[href=""],
a:not([name])[id=""]:not([href]),
a[name=""]:not([id]):not([href]),
a:not([name]):not([id])[href=""],
a:not([name]):not([id]):not([href]) {
  @include error('no-href');
}


/*doc
---
title: "Empty link"
name: empty-link
category: Errors
---

##Description
An empty link should have a label, within `[title]`, `[aria-label]` or targeted by `[aria-labelledby]`.
By the way, why would you use an empty link?

##References
* <http://references.modernisation.gouv.fr/referentiel-technique-0#title-critre-65-a-dans-chaque-page-web-chaque-lien-lexception-des-ancres-a-t-il-un-intitul->
* <http://www.w3.org/TR/WCAG20/#text-equiv-all>
* <http://www.w3.org/TR/WCAG20/#navigation-mechanisms-refs>
* <http://www.w3.org/TR/WCAG20/#navigation-mechanisms-link>
* <http://www.w3.org/TR/WCAG-TECHS/H30.html>
* <http://www.w3.org/TR/WCAG-TECHS/G91.html>
* <https://github.com/Heydon/REVENGE.CSS/blob/master/revenge.css#L193>
* <https://drafts.csswg.org/selectors-4/#the-blank-pseudo>
* <https://developer.mozilla.org/en-US/docs/Web/CSS/:-moz-only-whitespace>
* <https://css-tricks.com/almanac/selectors/b/blank/>

##Selector
```css_example
a:empty[title=""],
a:empty[aria-label=""],
a:empty[aria-labelledby=""],
a:empty:not([title]):not([aria-label]):not([aria-labelledby])

a:blank[title=""],
a:blank[aria-label=""],
a:blank[aria-labelledby=""],
a:blank:not([title]):not([aria-label]):not([aria-labelledby])

a:-moz-only-whitespace[title=""],
a:-moz-only-whitespace[aria-label=""],
a:-moz-only-whitespace[aria-labelledby=""],
a:-moz-only-whitespace:not([title]):not([aria-label]):not([aria-labelledby])
```

##Test
```html_example
<a href="/" class="inbl w-20" id="empty-link_code"></a>

<a href="/" class="inbl w-20" id="empty-link_code-moz"> </a>
```
*/
a:empty[title=""],
a:empty[aria-label=""],
a:empty[aria-labelledby=""],
a:empty:not([title]):not([aria-label]):not([aria-labelledby]) {
  @include error('empty-link');
}

a:blank[title=""],
a:blank[aria-label=""],
a:blank[aria-labelledby=""],
a:blank:not([title]):not([aria-label]):not([aria-labelledby]) {
  @include error('empty-link', $self-closing: false);
}

a:-moz-only-whitespace[title=""],
a:-moz-only-whitespace[aria-label=""],
a:-moz-only-whitespace[aria-labelledby=""],
a:-moz-only-whitespace:not([title]):not([aria-label]):not([aria-labelledby]) {
  @include error('empty-link', $self-closing: false);
}


/*doc
---
title: "Missing alternative for img"
name: no-alt
category: Errors
---

##Description
An `<img>` must have an `[alt]`. Always.

##References
* <http://references.modernisation.gouv.fr/referentiel-technique-0#title-critre-11-a-chaque-image-a-t-elle-une-alternative-textuelle->
* <http://www.w3.org/WAI/tutorials/images/decision-tree/>
* <http://www.w3.org/TR/html51/semantics.html#alt>
* <http://www.w3.org/TR/WCAG20/#text-equiv-all>
* <http://www.w3.org/TR/WCAG-TECHS/H36.html>
* <http://www.w3.org/TR/WCAG-TECHS/H37.html>
* <http://www.w3.org/TR/WCAG-TECHS/H24.html>
* <http://www.w3.org/TR/WCAG-TECHS/F65.html>
* <https://github.com/yahoo/debugCSS/blob/master/debugCSS.css#L369>

##Selector
```css_example
img:not([alt]),
area:not([alt]),
input[type="image"]:not([alt])
```

##Test
```html_example
<img src="static/ffoodd.png" width="144" height="144" /><span>†</span>
<input type="image" src="static/ffoodd.png" /><span>†</span>
```
*/
img:not([alt]),
area:not([alt]),
input[type="image"]:not([alt]) {
  @include error('no-alt', $self-closing: true);
}


/*doc
---
title: "Missing source for img"
name: no-src
category: Errors
---

##Description
An `<img>` must have an `[src]` or an `[srcset]`. Obviously.

##References
* <http://www.w3.org/TR/html5/embedded-content-0.html#attr-img-src>
* <https://github.com/yahoo/debugCSS/blob/master/debugCSS.css#L374>
* <http://scottjehl.github.io/picturefill/>

##Selector
```css_example
img:not([src]):not([srcset]),
img[src=""],
img[src="#"],
img[src="/"],
img[srcset=""],
img[srcset="#"],
img[srcset="/"],
input[type="image"]:not([src]):not([srcset]),
input[type="image"][src=""],
input[type="image"][src="#"],
input[type="image"][src="/"],
input[type="image"][srcset=""],
input[type="image"][srcset="#"]
input[type="image"][srcset="/"]
```

##Test
```html_example
<img alt="Missing src" width="144" height="144" />
<input type="image" alt="Missing src" />
```
*/
img:not([src]):not([srcset]),
img[src=""],
img[src="#"],
img[src="/"],
img[srcset=""],
img[srcset="#"],
img[srcset="/"],
input[type="image"]:not([src]):not([srcset]),
input[type="image"][src=""],
input[type="image"][src="#"],
input[type="image"][src="/"],
input[type="image"][srcset=""],
input[type="image"][srcset="#"],
input[type="image"][srcset="/"] {
  @include error('no-src');
}


/*doc
---
title: "A label without a [for] attribute"
name: no-for
category: Errors
---

##Description
A `<label>` is labelling something, in theory.

##References
* <http://references.modernisation.gouv.fr/referentiel-technique-0#title-critre-111-a-chaque-champ-de-formulaire-a-t-il-une-tiquette->
* <http://www.w3.org/TR/WCAG20/#minimize-error-cues>
* <http://www.w3.org/TR/WCAG20/#navigation-mechanisms-descriptive>
* <http://www.w3.org/TR/WCAG20/#content-structure-separation-programmatic>
* <http://www.w3.org/TR/WCAG-TECHS/H44.html>

##Selector
```css_example
label:not([for]),
label[for=""]
```

##Test
```html_example
<label>Guess what?</label>
```
*/
label:not([for]),
label[for=""] {
  @include error('no-for');
}


/*doc
---
title: "Missing some kind of label"
name: no-id
category: Errors
---

##Description
How to label a field? You have a few choices: `[id]`, `[title]`, `[aria-label]` and `[aria-labelledby]`.

##References
* <http://references.modernisation.gouv.fr/referentiel-technique-0#title-critre-111-a-chaque-champ-de-formulaire-a-t-il-une-tiquette->
* <http://www.w3.org/TR/WCAG20/#minimize-error-cues>
* <http://www.w3.org/TR/WCAG20/#navigation-mechanisms-descriptive>
* <http://www.w3.org/TR/WCAG20/#content-structure-separation-programmatic>
* <http://www.w3.org/TR/WCAG-TECHS/H44.html>

##Selector
```css_example
input:not([type="button"]):not([type="submit"]):not([type="hidden"]):not([type="reset"]):not([type="image"]):not([id]):not([aria-label]):not([title]):not([aria-labelledby]),
textarea:not([id]):not([aria-label]):not([aria-labelledby]),
select:not([id]):not([aria-label]):not([aria-labelledby])
```

##Test
```html_example
<input type="text" /><span>†</span>
```
*/
input:not([type="button"]):not([type="submit"]):not([type="hidden"]):not([type="reset"]):not([type="image"]):not([id]):not([aria-label]):not([title]):not([aria-labelledby]),
textarea:not([id]):not([aria-label]):not([aria-labelledby]),
select:not([id]):not([aria-label]):not([aria-labelledby]) {
  @include error('no-id', $self-closing: true);
}


/*doc
---
title: "Missing a value"
name: no-value
category: Errors
---

##Description
How to label a `[reset]`, `[submit]` or `[button]` type input?
You still have a few choices: `[value]`, `[title]`, `[aria-label]` and `[aria-labelledby]`.

##References
* <http://references.modernisation.gouv.fr/referentiel-technique-0#title-critre-119-a-dans-chaque-formulaire-lintitul-de-chaque-bouton-est-il-pertinent->
* <http://www.w3.org/TR/WCAG20/#ensure-compat-rsv>
* <http://www.w3.org/TR/WCAG-TECHS/H91.html>

##Selector
```css_example
input[type="reset"]:not([value]):not([title]):not([aria-label]):not([aria-labelledby]),
input[type="submit"]:not([value]):not([title]):not([aria-label]):not([aria-labelledby]),
input[type="button"]:not([value]):not([title]):not([aria-label]):not([aria-labelledby])
```

##Test
```html_example
<input type="reset" /><span>†</span>
<input type="submit" /><span>†</span>
<input type="button" /><span>†</span>
```
*/
input[type="reset"]:not([value]):not([title]):not([aria-label]):not([aria-labelledby]),
input[type="submit"]:not([value]):not([title]):not([aria-label]):not([aria-labelledby]),
input[type="button"]:not([value]):not([title]):not([aria-label]):not([aria-labelledby]) {
  @include error('no-value', $self-closing: true);
}


/*doc
---
title: "Empty button"
name: empty-button
category: Errors
---

##Description
A `<button>` should either have content or an `[aria-label]`, `[aria-labelledby]` or `[title]`. Those attributes, if present, should not be empty.

##References
* <http://references.modernisation.gouv.fr/referentiel-technique-0#title-1211-formulaires>
* <http://references.modernisation.gouv.fr/referentiel-technique-0#title-critre-119-a-dans-chaque-formulaire-lintitul-de-chaque-bouton-est-il-pertinent->
* <http://www.w3.org/TR/WCAG20/#ensure-compat-rsv>
* <http://www.w3.org/TR/WCAG-TECHS/H91.html>
* <https://github.com/Heydon/REVENGE.CSS/blob/master/revenge.css#L193>
* <https://drafts.csswg.org/selectors-4/#the-blank-pseudo>
* <https://developer.mozilla.org/en-US/docs/Web/CSS/:-moz-only-whitespace>
* <https://css-tricks.com/almanac/selectors/b/blank/>

##Selector
```css_example
button:empty:not([aria-label]):not([aria-labelledby]):not([title])

button:blank:not([aria-label]):not([aria-labelledby]):not([title])

button:-moz-only-whitespace:not([aria-label]):not([aria-labelledby]):not([title])
```

##Test
```html_example
<button type="button"></button>

<button type="button"> </button>
```
*/
button:empty:not([aria-label]):not([aria-labelledby]):not([title]) {
  @include error('empty-button');
}

button:blank:not([aria-label]):not([aria-labelledby]):not([title]) {
  @include error('empty-button', $self-closing: false);
}

button:-moz-only-whitespace:not([aria-label]):not([aria-labelledby]):not([title]) {
  @include error('empty-button', $self-closing: false);
}


/*doc
---
title: "Empty button attribute"
name: empty-button-attr
category: Errors
---

##Description
`[aria-label]`, `[aria-labelledby]` or `[title]` on a `<button>` must not be empty.

##References
* <http://references.modernisation.gouv.fr/referentiel-technique-0#title-1211-formulaires>
* <http://references.modernisation.gouv.fr/referentiel-technique-0#title-critre-119-a-dans-chaque-formulaire-lintitul-de-chaque-bouton-est-il-pertinent->
* <http://www.w3.org/TR/WCAG20/#ensure-compat-rsv>
* <http://www.w3.org/TR/WCAG-TECHS/H91.html>
* <https://github.com/Heydon/REVENGE.CSS/blob/master/revenge.css#L193>

##Selector
```css_example
button[title=""],
button[aria-label=""],
button[aria-labelledby=""]
```

##Test
```html_example
<button title="" type="button">Test</button>
```
*/
button[title=""],
button[aria-label=""],
button[aria-labelledby=""] {
  @include error('empty-button-attr');
}


/*doc
---
title: "Form button"
name: not-form-button
category: Errors
---

##Description
A `<button>` has a defaut `[type]` value of `"submit"`, in order to send a `<form>`.

However outside a form, if it's intended to send a form it should mention it with one of those attributes: `[form]`, `[formaction]`, `[formtarget]`.

If it doesn't submit anything, it should have the `[type="button"]`.

##References
* <http://www.w3.org/TR/html5/forms.html#the-button-element>
* <https://github.com/Heydon/REVENGE.CSS/blob/master/revenge.css#L189>

##Selector
```css_example
button:not([type]):not([form]):not([formaction]):not([formtarget])
```

##Test
```html_example
<button>I just don't know what todo with myself</button>
```
*/
button:not([type]):not([form]):not([formaction]):not([formtarget]) {
  @include error('not-form-button');
}

form button:not([type]):not([form]):not([formaction]):not([formtarget]) {
  @extend %a11y-reset;
}

/*doc
---
title: "Button not submitting"
name: not-submit-button
category: Errors
---

##Description
If a `<button>`'s`[type]` is either `"reset"` or `"button"`, it should not use the following attributes:
* `[formmethod]`;
* `[formaction]`;
* `[formtarget]`;
* `[formenctype]`;
* `[formnovalidate]`.

##References
* <http://www.w3.org/TR/html5/forms.html#the-button-element>

##Selector
```css_example
button[type="reset"][formmethod],
button[type="reset"][formaction],
button[type="reset"][formtarget],
button[type="reset"][formenctype],
button[type="reset"][formnovalidate],
button[type="button"][formmethod],
button[type="button"][formaction],
button[type="button"][formtarget],
button[type="button"][formenctype],
button[type="button"][formnovalidate]
```

##Test
```html_example
<button type="button" formmethod="GET">I do have a method, but I'm not a submit button!</button>
```
*/
button[type="reset"],
button[type="button"] {
  &[formmethod],
  &[formaction],
  &[formtarget],
  &[formenctype],
  &[formnovalidate] {
    @include error('not-submit-button');
  }
}

/*doc
---
title: "Disabled button"
name: disabled-button
category: Errors
---

##Description
A `<button>` styled to be disabled should be disabled *for real*.
Use `[disabled]` and `[readonly]`.

##References
* <https://github.com/Heydon/REVENGE.CSS/blob/master/revenge.css#L122>

##Selector
```css_example
button[class*="disabled"]:not([disabled]):not([readonly])
```

##Test
```html_example
<button class="is-disabled" type="button">To be or not to be (disabled)?</button>
```
*/
button[class*="disabled"]:not([disabled]):not([readonly]) {
  @include error('disabled-button');
}


/*doc
---
title: "input without [type]"
name: no-type
category: Errors
---

##Description
`<input>` needs a `[type]` in order to tell the user what kind of data is wanted.

##References
* <http://references.modernisation.gouv.fr/referentiel-technique-0#title-critre-1111-aa-dans-chaque-formulaire-le-contrle-de-saisie-est-il-accompagn-si-ncessaire-de-suggestions-facilitant-la-correction-des-erreurs-de-saisie->
* <http://www.w3.org/TR/WCAG20/#minimize-error-suggestions>

##Selector
```css_example
input:not([type]),
input[type=""]
```

##Test
```html_example
<label for="No-type">No type</label>
<input value="Whatever you want" id="No-type"/><span>†</span>
```
*/
input:not([type]),
input[type=""] {
  @include error('no-type', $self-closing: true);
}


/*doc
---
title: "optgroup without label"
name: optgroup
category: Errors
---

##Description
`<optgroup>` needs a `[label]` to explain what's inside the group.

##References
* <http://references.modernisation.gouv.fr/referentiel-technique-0#title-critre-118-a-dans-chaque-formulaire-chaque-liste-de-choix-est-elle-structure-de-manire-pertinente->
* <http://www.w3.org/TR/WCAG-TECHS/H85.html>
* <http://www.w3.org/TR/2014/NOTE-WCAG20-TECHS-20140916/H85>

##Selector
```css_example
optgroup:not([label])
```

##Test
```html_example
<form action="/">
    <label for="optgroup-test">Oh, hey</label>
    <select id="optgroup-test">
      <optgroup label="I'm a group">
        <option value="1">I'm an option</option>
        <option value="2">I'm another option</option>
      </optgroup>
      <optgroup>
        <option value="3">I'm an option, but from another group</option>
        <option value="4">I'm another option, still from another group</option>
     </optgroup>
   </select>
</form>
```
*/
optgroup:not([label]) {
  @include error('optgroup', $self-closing: true);
}


/*doc
---
title: "iframe without [title]"
name: no-title
category: Errors
---

##Description
`<iframe>` needs a `[title]` in order to tell the user what to expect inside the iframe.

##References
* <http://references.modernisation.gouv.fr/referentiel-technique-0#title-critre-21-a-chaque-cadre-en-ligne-a-t-il-un-titre-de-cadre->
* <http://www.w3.org/TR/WCAG20/#ensure-compat-rsv>
* <http://www.w3.org/TR/WCAG-TECHS/H64.html>
* <https://github.com/yahoo/debugCSS/blob/master/debugCSS.css#L454>

##Selector
```css_example
iframe:not([title]),
iframe[title=""]
```

##Test
```html_example
<iframe src="static/no-title.html" sandbox="allow-same-origin"></iframe><span>†</span>
```
*/
iframe:not([title]),
iframe[title=""] {
  @include error('no-title', $self-closing: true);
}


/*doc
---
title: "form missing an [action]"
name: no-action
category: Errors
---

##Description
`<form>` should do something, isnt'it? Well, `[action]` is meant to define what.

##References
* <https://github.com/Heydon/REVENGE.CSS/blob/master/revenge.css#L214>

##Selector
```css_example
form:not([action])
```

##Test
```html_example
<form>
  <label for="input">Guess what do we do with your datas?</label>
  <input id="input" type="text" />

  <input type="submit" value="No idea, huh?"/>
</form>
```
*/
form:not([action]) {
  @include error('no-action');
}


/*doc
---
title: "No language defined"
name: no-lang
category: Errors
---

##Description
`<html>` must indicate to User Agents the human language used in the document.

##References
* <http://references.modernisation.gouv.fr/referentiel-technique-0#title-critre-83-a-dans-chaque-page-web-la-langue-par-dfaut-est-elle-prsente->
* <http://references.modernisation.gouv.fr/referentiel-technique-0#title-langue-par-dfaut>
* <http://references.modernisation.gouv.fr/referentiel-technique-0#title-critre-84-a-pour-chaque-page-web-ayant-une-langue-par-dfaut-le-code-de-langue-est-il-pertinent->
* <http://www.w3.org/TR/WCAG20/#meaning-doc-lang-id>
* <http://www.w3.org/TR/WCAG-TECHS/H57.html>

##Selector
```css_example
html:not([lang]),
html[lang=""]
```

##Test
```html_example
<iframe title="No language defined a11y.css test-case" src="static/no-lang.html" sandbox="allow-same-origin"></iframe>
```
*/
html:not([lang]),
html[lang=""] {
  @include error('no-lang');
}


/*doc
---
title: "table used for layout"
name: table-for-layout
category: Errors
---

##Description
`<table>` may be used for layout if a [role="presentation"] is added.
However, semantics tags and attributes aiming to organize datas mustn't be used. Here's a list:
* `<th>`;
* `<thead>`;
* `<tfoot>`;
* `<caption>`;
* `[axis]`;
* `[scope]`;
* `[headers]`;
* `[colgroup]`.

##References
* <http://references.modernisation.gouv.fr/referentiel-technique-0#title-critre-58-a-chaque-tableau-de-mise-en-forme-ne-doit-pas-utiliser-dlments-propres-aux-tableaux-de-donnes-cette-rgle-est-elle-respecte->
* <http://www.w3.org/TR/WCAG-TECHS/F46.html>
* <http://www.w3.org/TR/2014/NOTE-WCAG20-TECHS-20140916/F49>

##Selector
```css_example
table[role="presentation"] th,
table[role="presentation"] thead,
table[role="presentation"] tfoot,
table[role="presentation"] caption,
table[role="presentation"] [axis],
table[role="presentation"] [scope],
table[role="presentation"] [headers],
table[role="presentation"] [colgroup]
```

##Test
```html_example
<table role="presentation">
  <caption>I do not mean anything!</caption>
  <thead>
    <tr>
      <th scope="col" id="col">Nope</th>
      <th scope="col">Just sayin'</th>
    </tr>
  </thead>
  <tfoot>
    <tr>
      <td colspan="2" headers="col">Hello world</td>
    </tr>
  </tfoot>
  <tbody>
    <tr>
      <td colspan="2">It works</td>
    </tr>
  </tbody>
</table>
```
*/
table[role="presentation"] th,
table[role="presentation"] thead,
table[role="presentation"] tfoot,
table[role="presentation"] caption,
table[role="presentation"] [axis],
table[role="presentation"] [scope],
table[role="presentation"] [headers],
table[role="presentation"] [colgroup] {
  @include error('table-for-layout');
}


/*doc
---
title: "[width] & [height] attributes"
name: dimensions
category: Errors
---

##Description
`[width]` and `[height]` are presentation informations.
Therefore it shouldn't be used in markup, except for `<img>`. Use CSS instead.

##References
* <http://references.modernisation.gouv.fr/referentiel-technique-0#title-prsentation-de-linformation>
* <http://references.modernisation.gouv.fr/referentiel-technique-0#title-critre-101-a-dans-le-site-web-des-feuilles-de-styles-sont-elles-utilises-pour-contrler-la-prsentation-de-linformation->
* <http://www.w3.org/TR/WCAG20/#content-structure-separation-programmatic>
* <http://www.w3.org/TR/WCAG20/#content-structure-separation-sequence>

##Selector
```css_example
:not(img):not(object):not(embed):not(svg):not(canvas)[width],
:not(img):not(object):not(embed):not(svg):not(canvas)[height]
```

##Test
```html_example
<p width="20">Damned! I feel sooo strait :(</p>
```
*/
:not(img):not(object):not(embed):not(svg):not(canvas)[width],
:not(img):not(object):not(embed):not(svg):not(canvas)[height] {
  @include error('dimensions');

  @include void-tags {
    @include error('dimensions', $self-closing: true);
  }
}



/*doc
---
title: "Javascript events attributes"
name: js-events
category: Errors
---

##Description
Javascript event attributes (such as `[onmouseover]`) should not be used.
Prefer either CSS pseudo-classes (`:hover`, `:focus`, `:active`, etc.) or JS event listeners.

##References
* <https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes>
* <https://developer.mozilla.org/en-US/docs/Web/API/EventTarget.addEventListener>

##Selector
```css_example
[onafterprint], [onbeforeprint], [onbeforeunload],
[onerror], [onhaschange], [onload], [onmessage],
[onoffline], [ononline], [onpagehide], [onpageshow],
[onpopstate], [onredo], [onresize], [onstorage],
[onundo], [onunload],
[onblur], [onchage], [oncontextmenu], [onfocus],
[onformchange], [onforminput], [oninput], [oninvalid],
[onreset], [onselect], [onsubmit],
[onkeydown], [onkeypress], [onkeyup],
[onclick], [ondblclick], [ondrag], [ondragend],
[ondragenter], [ondragleave], [ondragover],
[ondragstart], [ondrop], [onmousedown], [onmousemove],
[onmouseout], [onmouseover], [onmouseup], [onmousewheel],
[onscroll],
[onabort], [oncanplay], [oncanplaythrough],
[ondurationchange], [onemptied], [onended], [onerror],
[onloadeddata], [onloadedmetadata], [onloadstart],
[onpause], [onplay], [onplaying], [onprogress],
[onratechange], [onreadystatechange], [onseeked],
[onseeking], [onstalled], [onsuspend], [ontimeupdate],
[onvolumechange], [onwaiting]
```

##Test
```html_example
<span onclick="alert('You clicked!');">Click click click</span>
```
*/
[onafterprint], [onbeforeprint], [onbeforeunload],
[onerror], [onhaschange], [onload], [onmessage],
[onoffline], [ononline], [onpagehide], [onpageshow],
[onpopstate], [onredo], [onresize], [onstorage],
[onundo], [onunload],
[onblur], [onchage], [oncontextmenu], [onfocus],
[onformchange], [onforminput], [oninput], [oninvalid],
[onreset], [onselect], [onsubmit],
[onkeydown], [onkeypress], [onkeyup],
[onclick], [ondblclick], [ondrag], [ondragend],
[ondragenter], [ondragleave], [ondragover],
[ondragstart], [ondrop], [onmousedown], [onmousemove],
[onmouseout], [onmouseover], [onmouseup], [onmousewheel],
[onscroll],
[onabort], [oncanplay], [oncanplaythrough],
[ondurationchange], [onemptied], [onended], [onerror],
[onloadeddata], [onloadedmetadata], [onloadstart],
[onpause], [onplay], [onplaying], [onprogress],
[onratechange], [onreadystatechange], [onseeked],
[onseeking], [onstalled], [onsuspend], [ontimeupdate],
[onvolumechange], [onwaiting] {
  @include error('js-events');
}


/*doc
---
title: "Namespaces"
name: namespace
category: Errors
---

##Description
Did you know that some characters should be avoided as first characters in class names and identifiers?
Yep. Digits, two hyphens, or hyphen followed by a digit.

##References
* <http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#w3cselgrammar>
* <http://www.w3.org/Style/CSS/Test/CSS3/Selectors/current/>
* <http://www.w3.org/Style/CSS/Test/CSS3/Selectors/current/html/tests/css3-modsel-175a.html>
* <https://github.com/yahoo/debugCSS/blob/master/debugCSS.css#L466>
* <https://github.com/yahoo/debugCSS/blob/master/debugCSS.css#L480>

##Selector
```css_example
[id^="1"],
[id^="2"],
[id^="3"],
[id^="4"],
[id^="5"],
[id^="6"],
[id^="7"],
[id^="8"],
[id^="9"],
[id^="0"],
[id^="--"],
[id^="-1"],
[id^="-2"],
[id^="-3"],
[id^="-4"],
[id^="-5"],
[id^="-6"],
[id^="-7"],
[id^="-8"],
[id^="-9"],
[id^="-0"],
[class^="1"],
[class^="2"],
[class^="3"],
[class^="4"],
[class^="5"],
[class^="6"],
[class^="7"],
[class^="8"],
[class^="9"],
[class^="0"],
[class^="--"],
[class^="-1"],
[class^="-2"],
[class^="-3"],
[class^="-4"],
[class^="-5"],
[class^="-6"],
[class^="-7"],
[class^="-8"],
[class^="-9"],
[class^="-0"]
```

##Test
```html_example
<div id="2">Hello! My ID is 2.</div>
```
*/
[id^="1"],
[id^="2"],
[id^="3"],
[id^="4"],
[id^="5"],
[id^="6"],
[id^="7"],
[id^="8"],
[id^="9"],
[id^="0"],
[id^="--"],
[id^="-1"],
[id^="-2"],
[id^="-3"],
[id^="-4"],
[id^="-5"],
[id^="-6"],
[id^="-7"],
[id^="-8"],
[id^="-9"],
[id^="-0"],
[class^="1"],
[class^="2"],
[class^="3"],
[class^="4"],
[class^="5"],
[class^="6"],
[class^="7"],
[class^="8"],
[class^="9"],
[class^="0"],
[class^="--"],
[class^="-1"],
[class^="-2"],
[class^="-3"],
[class^="-4"],
[class^="-5"],
[class^="-6"],
[class^="-7"],
[class^="-8"],
[class^="-9"],
[class^="-0"] {
  @include error('namespace');
}


/*doc
---
title: "[style] attribute"
name: style-attr
category: Errors
---

##Description
Your styles should be driven by a CSS file. That's it.
And no, JS shouldn't manipulate styles: it's better to play with classes, for example.

##References
* <http://references.modernisation.gouv.fr/referentiel-technique-0#title-critre-101-a-dans-le-site-web-des-feuilles-de-styles-sont-elles-utilises-pour-contrler-la-prsentation-de-linformation->
* <http://www.w3.org/TR/WCAG20/#content-structure-separation-programmatic>
* <http://www.w3.org/TR/WCAG20/#content-structure-separation-sequence>

##Selector
```css_example
[style]
```

##Test
```html_example
<div style="color: red;">I'm red. I really feel dirty.</div>
```
*/
[style] {
  @include error('style-attr');

  @include void-tags {
    @include error('style-attr', $self-closing: true);
  }
}



/*doc
---
title: "Empty title tag"
name: no-page-title
category: Errors
---

##Description
The `title>` tag is the first thing read aloud by screen readers — to announce the page&hellip; title — and also the first thing displayed on search engines' results pages.

We also use the `:blank` pseudo-class for the single space case, but at this time its support is very poor.
We also use the `:-moz-only-whitespace` pseudo-class, which is an alias of `:blank`.

##References
* <http://references.modernisation.gouv.fr/referentiel-technique-0#title-critre-85-a-chaque-page-web-a-t-elle-un-titre-de-page->
* <http://references.modernisation.gouv.fr/referentiel-technique-0#titre-de-page>
* <http://www.w3.org/TR/html5/document-metadata.html#the-title-element>
* <http://www.w3.org/TR/WCAG20/#navigation-mechanisms-title>
* <http://www.w3.org/WAI/WCAG20/quickref/#qr-navigation-mechanisms-title>
* <http://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-title.html>
* <http://www.w3.org/TR/WCAG-TECHS/G88.html>
* <http://www.w3.org/TR/WCAG-TECHS/G127.html>
* <http://www.w3.org/TR/WCAG-TECHS/H25.html>
* <https://drafts.csswg.org/selectors-4/#the-blank-pseudo>
* <https://developer.mozilla.org/en-US/docs/Web/CSS/:-moz-only-whitespace>
* <https://css-tricks.com/almanac/selectors/b/blank/>

##Selector
```css_example
title:empty
title:blank
title:-moz-only-whitespace
```

##Test
```html_example
<title></title>
```
*/
title:empty {
  @include error('no-page-title');
  @include a11y-head('<title>', 'error');
}

title:blank {
  @include error('no-page-title', $self-closing: false);
  @include a11y-head('<title>', 'error');
}

title:-moz-only-whitespace {
  @include error('no-page-title', $self-closing: false);
  @include a11y-head('<title>', 'error');
}
