/// Helper function to deep-get a map
/// @access private
/// @param {Map} $map
/// @param {Arglist} $keys
/// @return {*}
@function map-deep-get($map, $keys...) {
  @each $key in $keys {
    $map: map-get($map, $key);
  }

  @return $map;
}


/// Retrieve message from series of keys
/// @access public
/// @param {String} $theme - Either `advice`, `error` or `warning`
/// @param {String} $key - Key to find message for
/// @requires $messages
/// @requires $locale
/// @throws "Theme `#{$theme}` does not exist."
/// @throws "Key `#{$key}` not found for theme `#{$theme}`."
/// @return {String} Message
@function message($theme, $key) {
  $locale: if(global-variable-exists('language'), $language, 'en');

  @if not index(map-keys($messages), $theme) {
    @error "Theme `#{$theme}` does not exist.";
  }

  @if not index(map-keys(map-get($messages, $theme)), $key) {
    @error "No key `#{$key}` found for theme `#{$theme}`.";
  }

  @return map-deep-get($messages, ($theme, $key, $locale)...);
}


/// Configuration helper
/// @param {String} $theme
/// @param {String} $key
/// @require $themes
/// @return {*}
/// @example scss - Get color from error theme
/// .selector {
///   color: theme-conf('error', 'color');
/// }
/// @example css - Resulting CSS
/// .selector {
///   color: crimson;
/// }
@function theme-conf($theme, $key) {
  @return map-deep-get($themes, $theme, $key);
}
